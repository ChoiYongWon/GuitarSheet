{"version":3,"sources":["Content/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","styled","div","Logo","span","Container","EditorWrapper","Editor","props","num","TitleArea","Cell","EditorTouchArea","EditorNumArea","EditorButtonArea","TouchCell","Circle","view","UpCircle","DownCircle","Rectangle","ResultWrapper","Result","svg","attrs","version","xmlns","Rect","rect","x","Line","line","SvgCircle","circle","Text","text","CircleWrapper","EmptyCircle","transparant","Content","svgRef","createRef","useState","circleState","Array","fill","longState","longCoord","dragStartIndex","code","isDragging","isEmpty","isXed","currentIndex","editState","setEditState","onDragEnd","e","index","button","state","tempIndex","Math","floor","abs","n","deleteLong","option","i","longIndex","Object","keys","Number","j","length","useEffect","placeholder","onChange","target","value","map","onClick","CloseOutlined","style","fontSize","opacity","onMouseLeave","onMouseDown","preventDefault","onDragStart","onMouseEnter","onDragEnter","onMouseUp","size","min","max","defaultValue","disabled","icon","DownloadOutlined","saveSvgAsPng","current","ref","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","color","y","width","height","rx","ry","fontWeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d265d225.chunk.js","sourcesContent":["import React,{useState, useEffect, createRef} from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { InputNumber, Button, Input} from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport {saveSvgAsPng} from \"save-svg-as-png\"\r\nimport {CloseOutlined} from \"@ant-design/icons\"\r\n\r\nconst Header = styled.div`\r\n  width : 100%;\r\n  height : 6rem;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow : 4px 4px 2px grey;\r\n`\r\n\r\nconst Logo = styled.span`\r\n  font-weight: bold;\r\n  font-size : 2.5rem;\r\n  color : black;\r\n`\r\n\r\nconst Container = styled.div`\r\n  width : 50%;\r\n  display : flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin : 0 auto;\r\n  margin-top: 2rem;\r\n  @media(max-width: 1500px){ width : 65%; }\r\n  @media(max-width: 1300px){ width : 80%; }\r\n  @media(max-width: 768px){ width : 95%; }\r\n  \r\n`\r\n\r\nconst EditorWrapper = styled.div`\r\n  width : 100%;\r\n  height : auto;\r\n  padding : 2rem;\r\n  border : 3px solid black;\r\n  border-radius : 10px;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Editor = styled.div`\r\n  width : 80%;\r\n  height : auto;\r\n  display : grid;\r\n  position: relative;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(5, 40px);\r\n  background-color: black;\r\n  border : 4px solid black;\r\n  border-right : none;\r\n  gap : 4px;\r\n  ${props=>props.num===1 ? `border-left : 14px solid black;` : null}\r\n  \r\n`\r\n\r\nconst TitleArea = styled.div`\r\n  width : 40%;\r\n  margin-bottom: 2rem;\r\n  display : flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Cell = styled.div`\r\n  background-color : white;\r\n\r\n`\r\n\r\nconst EditorTouchArea = styled.div`\r\n  width :100%;\r\n  display : grid;\r\n  position : absolute;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(6, 44px);\r\n  top : -23.5px;\r\n`\r\n\r\nconst EditorNumArea = styled.div`\r\n  width : 80%;\r\n  display : flex;\r\n  margin-top : 1.5rem;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst EditorButtonArea = styled.div`\r\n  width : 80%;\r\n  display : flex;\r\n  justify-content: center;\r\n  margin-top : 1rem;\r\n`\r\n\r\nconst TouchCell = styled.div`\r\n  background-color : transparent;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor : pointer;\r\n  &:hover {\r\n    background-color : rgba(0,0,0,0.3)\r\n  }\r\n`\r\n\r\nconst Circle = styled.div`\r\n  ${props=>props.view===true ? `display : block;` : `display : none;`}\r\n  height: 36px;\r\n  width: 36px;\r\n  border-radius: 22.125px;\r\n  background-color : black;\r\n`\r\n\r\nconst UpCircle = styled.div`\r\n  ${props=>props.view===true ? `display : block;` : `display : none;`}\r\n  height: 100%;\r\n  width: 36px;\r\n  border-top-left-radius: 22.125px;\r\n  border-top-right-radius: 22.125px;\r\n  background-color : black;\r\n`\r\n\r\nconst DownCircle = styled.div`\r\n  ${props=>props.view===true ? `display : block;` : `display : none;`}\r\n  height: 100%;\r\n  width: 36px;\r\n  border-bottom-left-radius: 22.125px;\r\n  border-bottom-right-radius: 22.125px;\r\n  background-color : black;\r\n`\r\n\r\nconst Rectangle = styled.div`\r\n  ${props=>props.view===true ? `display : block;` : `display : none;`}\r\n  height: 100%;\r\n  width: 36px;\r\n  background-color : black;\r\n`\r\n\r\n//result\r\nconst ResultWrapper = styled.div`\r\n  width : 100%;\r\n  height : auto;\r\n  padding : 2rem;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n`\r\n\r\nconst Result = styled.svg.attrs({ version: '1.1' , xmlns:\"http://www.w3.org/2000/svg\"})`\r\n  width : 80%;\r\n  min-height : 330px;\r\n  \r\n`\r\n\r\nconst Rect = styled.rect`\r\n  x : calc(${props=>props.x} - 20px)\r\n`\r\n\r\nconst Line = styled.line`\r\n  \r\n`\r\n\r\nconst SvgCircle = styled.circle`\r\n\r\n`\r\n\r\nconst Text = styled.text`\r\n\r\n`\r\n\r\n\r\nconst CircleWrapper = styled.div`\r\n  display : flex;\r\n  flex-direction: column;\r\n  height : 264px;\r\n  position : absolute;\r\n  top : -23.5px;\r\n  left : -70px;\r\n`\r\n\r\nconst EmptyCircle = styled.div`\r\n  width : 40px;\r\n  height : 40px;\r\n  background-color : transparent;\r\n  border : solid 2px black;\r\n  border-radius: 100%;\r\n  margin : 2px 0;\r\n  ${(props=> props.transparant ? `opacity : 0;` : null)}\r\n`\r\n\r\nconst Content = () => {\r\n\r\n    const svgRef = createRef()\r\n\r\n    const [editState, setEditState] = useState({\r\n        circleState : new Array(24).fill(false),\r\n        longState : new Array(24).fill(0), //0 : 아무것도 없는상태 1 : UP 2: DOWN 3 : 직사각형\r\n        longCoord : {},\r\n        dragStartIndex : null,\r\n        code : \"\",\r\n        num : 1,\r\n        isDragging : false,\r\n        isEmpty : [true, true, true, true, true, true],\r\n        isXed : [false, false, false, false, false, false],\r\n        currentIndex : 0\r\n    })\r\n\r\n    const onNumChange = (e) => {\r\n        setEditState((state)=>{\r\n            return {\r\n                ...state,\r\n                circleState : [...state.circleState],\r\n                longState : [...state.longState],\r\n                longCoord : {...state.longCoord},\r\n                num : e,\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const onDownloadClick = (e)=>{\r\n        saveSvgAsPng(svgRef.current, \"GuitarSheet.png\")\r\n    }\r\n    const onTitleChange = (e) => {\r\n        setEditState((state)=>{\r\n            return {\r\n                ...state,\r\n                circleState : [...state.circleState],\r\n                longState : [...state.longState],\r\n                longCoord : {...state.longCoord},\r\n                code : e.target.value\r\n            }\r\n        })\r\n    }\r\n    const onDragStart = (e, index) => { //드래그 시작지점만 알면됨\r\n        if(e.button===0){\r\n            e.preventDefault()\r\n            deleteLong(index)\r\n            setEditState(state=>{\r\n                return {\r\n                    ...state,\r\n                    dragStartIndex : index,\r\n                    isDragging : true,\r\n                    currentIndex : index\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const onDragEnd = (e, index) => {\r\n        if(e.button===0) {\r\n            if (editState.isDragging) {\r\n                setEditState(state => {\r\n                    let tempIndex = state.dragStartIndex + (Math.floor(state.dragStartIndex / 4) < Math.floor(index / 4) ? 1 : -1) * (Math.abs((Math.floor(index / 4) - Math.floor(state.dragStartIndex / 4)) * 4)) //시작 지점으로부터 경로 이탈시 제대로된 index 제공\r\n                    if (index === editState.dragStartIndex) {\r\n                        const circleState = [...state.circleState]\r\n                        circleState[index] = (circleState[index] === true) ? false : true\r\n                        return {\r\n                            ...state,\r\n                            circleState: [...circleState],\r\n                            isDragging: false\r\n                        }\r\n                    }\r\n                    const longState = [...state.longState]\r\n                    const longCoord = {...state.longCoord}\r\n\r\n                    let n = 0\r\n                    if (longState[tempIndex] === 1) {\r\n                        while (true) {\r\n                            n += 1\r\n                            if (longState[tempIndex + 4 * n] === 2) {\r\n                                break\r\n                            }\r\n                        }\r\n                        longCoord[tempIndex] = n + 1\r\n                    } else if (longState[tempIndex] === 2) {\r\n                        while (true) {\r\n                            n += 1\r\n                            if (longState[tempIndex - 4 * n] === 1) {\r\n                                break\r\n                            }\r\n                        }\r\n                        longCoord[tempIndex - 4 * n] = n + 1\r\n                    } else {\r\n\r\n                    }\r\n\r\n\r\n                    return {\r\n                        ...state,\r\n                        longState: [...longState],\r\n                        longCoord: {...longCoord},\r\n                        isDragging: false\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const onDragEnter = (e, index) => { //드래그하는 곳에따라 원 모양 배치\r\n        if(e.button===0) {\r\n            if (editState.isDragging) {\r\n                setEditState(state => {\r\n                    const circleState = [...state.circleState]\r\n                    const longState = [...state.longState]\r\n                    let tempIndex;\r\n\r\n                    if (circleState[state.dragStartIndex] === true) {\r\n                        circleState[state.dragStartIndex] = false\r\n                    }\r\n                    if (circleState[index] === true) {\r\n                        circleState[index] = false\r\n                    }\r\n\r\n\r\n                    if (Math.floor(state.dragStartIndex / 4) > Math.floor(index / 4)) {//아래에서 위로 드래그\r\n                        tempIndex = state.dragStartIndex - ((Math.floor(state.dragStartIndex / 4) - Math.floor(index / 4)) * 4) //시작 지점으로부터 경로 이탈시 제대로된 index 제공\r\n                        if (longState[tempIndex] === 2) {\r\n                            deleteLong(tempIndex, 1)\r\n\r\n                        }\r\n                        if (longState[state.dragStartIndex] !== 2) {\r\n                            longState[state.dragStartIndex] = 2\r\n                        }\r\n                        if (longState[tempIndex] === 1) { //직사각형 추가\r\n                            longState[state.currentIndex] = 3\r\n                        } else if (longState[tempIndex] === 3) { // 축소 알고리즘\r\n                            longState[state.currentIndex] = 0\r\n                            longState[tempIndex] = 1\r\n                        }\r\n\r\n                        longState[tempIndex] = 1\r\n                        circleState[tempIndex] = false\r\n\r\n                    } else if (Math.floor(state.dragStartIndex / 4) < Math.floor(index / 4)) {//위에서 아래로 드래그\r\n                        tempIndex = state.dragStartIndex + ((Math.floor(index / 4) - Math.floor(state.dragStartIndex / 4)) * 4) //시작 지점으로부터 경로 이탈시 제대로된 index 제공\r\n                        if (longState[tempIndex] === 1) {\r\n                            deleteLong(tempIndex, 2)\r\n                        }\r\n                        if (longState[state.dragStartIndex] !== 1) {\r\n                            longState[state.dragStartIndex] = 1\r\n                        }\r\n                        if (longState[tempIndex] === 2) { //직사각형 추가\r\n                            longState[state.currentIndex] = 3\r\n                        } else if (longState[tempIndex] === 3) { // 축소 알고리즘\r\n                            longState[state.currentIndex] = 0\r\n                            longState[tempIndex] = 2\r\n                        }\r\n\r\n                        longState[tempIndex] = 2\r\n                        circleState[tempIndex] = false\r\n\r\n                    } else if (Math.floor(state.dragStartIndex / 4) === Math.floor(index / 4)) {\r\n                        tempIndex = state.dragStartIndex + (Math.floor(state.dragStartIndex / 4) < Math.floor(index / 4) ? 1 : -1) * (Math.abs((Math.floor(index / 4) - Math.floor(state.dragStartIndex / 4)) * 4)) //시작 지점으로부터 경로 이탈시 제대로된 index 제공\r\n                        longState[state.currentIndex] = 0 //이전\r\n                        longState[tempIndex] = 0 //현재\r\n                    }\r\n\r\n\r\n                    for (let i = 1; i < Math.abs(Math.floor(index / 4) - Math.floor(state.dragStartIndex / 4)); i++) {\r\n                        if (index > state.dragStartIndex) {\r\n                            longState[state.dragStartIndex + 4 * i] = 3\r\n                        } else {\r\n                            longState[state.dragStartIndex - 4 * i] = 3\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        ...state,\r\n                        circleState: [...circleState],\r\n                        longState: [...longState],\r\n                        longCoord: {...state.longCoord},\r\n                        currentIndex: tempIndex\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    const deleteLong = (index, option) => {\r\n        for(let i=0;i<Object.keys(editState.longCoord).length;i++){\r\n            const longIndex = Object.keys(editState.longCoord)[i] // Key값\r\n            if(index >= Number(longIndex) && index <=Number(longIndex) + (editState.longCoord[longIndex]-1)*4 && index%4 === Number(longIndex)%4){//존재\r\n                setEditState(state=>{\r\n                    const longState = [...state.longState]\r\n                    const longCoord = {...state.longCoord}\r\n\r\n                    for(let j=0;j<longCoord[longIndex];j++){\r\n                        longState[Number(longIndex)+4*j] = 0\r\n                    }\r\n                    longState[index] = (option) ? (option===1) ? 1 : 2 : 0\r\n                    delete longCoord[longIndex] //value\r\n                    return {\r\n                        ...state,\r\n                        longState : [...longState],\r\n                        longCoord : {...longCoord},\r\n                    }\r\n                    }\r\n                )\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        let isEmpty = [true, true, true, true, true, true]\r\n        for(let i=0;i<24;i++){\r\n            if(editState.circleState[i]===true || editState.longState[i]!==0){\r\n                isEmpty[Math.floor(i/4)] = false\r\n\r\n            }\r\n        }\r\n        setEditState((state)=>{\r\n            return {\r\n                ...state,\r\n                isEmpty : [...isEmpty]\r\n            }\r\n        })\r\n    }, [editState.circleState, editState.longState])\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Logo>GuitarSheet</Logo>\r\n            </Header>\r\n            <Container>\r\n                <EditorWrapper>\r\n                    <TitleArea>\r\n                        <Input placeholder=\"Code\" onChange={onTitleChange}/>\r\n                    </TitleArea>\r\n\r\n                    <Editor num={editState.num}>\r\n                        {\r\n                            new Array(20).fill(0).map((i, index)=>{\r\n                                return <Cell key={index}></Cell>\r\n                            })\r\n                        }\r\n                        <CircleWrapper>\r\n                            {\r\n                                editState.isEmpty.map((i,index)=>{\r\n                                    return (editState.isXed[index]===false) ? <EmptyCircle key={index} transparant={i===true ? false : true} onClick={()=>{\r\n                                        setEditState(state=>{\r\n                                            const isXed = state.isXed\r\n                                            isXed[index] = true\r\n                                            return {\r\n                                                ...state,\r\n                                                isXed: [...isXed]\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    }/> : <CloseOutlined key={index} style={{\r\n                                        fontSize : \"44px\",\r\n                                        opacity : i===true ? 1 : 0\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setEditState(state=>{\r\n                                            const isXed = state.isXed\r\n                                            isXed[index] = false\r\n                                            return {\r\n                                                ...state,\r\n                                                isXed: [...isXed]\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    />\r\n                                })\r\n                            }\r\n\r\n                        </CircleWrapper>\r\n                        <EditorTouchArea onMouseLeave={(e)=>onDragEnd(e, editState.currentIndex)}>\r\n                            {\r\n                                new Array(24).fill(0).map((i, index)=>{\r\n                                    return <TouchCell key={index} onMouseDown={(e)=>onDragStart(e, index)} onMouseEnter={(e)=>onDragEnter(e, index)} onMouseUp={(e)=>onDragEnd(e, index)} onDragStart={()=>{\r\n                                        return false\r\n                                    }}>\r\n                                        <Circle key={index} view={editState.circleState[index]}></Circle>\r\n                                        <UpCircle key={24+index} view={editState.longState[index]===1}></UpCircle>\r\n                                        <DownCircle key={48+index} view={editState.longState[index]===2}></DownCircle>\r\n                                        <Rectangle key={72+index} view={editState.longState[index]===3}></Rectangle>\r\n\r\n                                    </TouchCell>\r\n                                })\r\n                            }\r\n                        </EditorTouchArea>\r\n\r\n                    </Editor>\r\n                    <EditorNumArea>\r\n                        <InputNumber size=\"large\" min={1} max={17} defaultValue={1} onChange={onNumChange} />\r\n                        <InputNumber size=\"large\" min={1} max={17} value={editState?.num+1} disabled={true}/>\r\n                        <InputNumber size=\"large\" min={1} max={17} value={editState?.num+2} disabled={true}/>\r\n                        <InputNumber size=\"large\" min={1} max={17} value={editState?.num+3} disabled={true}/>\r\n                    </EditorNumArea>\r\n                    <EditorButtonArea>\r\n                        <Button icon={<DownloadOutlined />} size={\"large\"} onClick={onDownloadClick}>\r\n                            Download\r\n                        </Button>\r\n                    </EditorButtonArea>\r\n                </EditorWrapper>\r\n                <ResultWrapper>\r\n                    <Result ref={svgRef}>\r\n                        {\r\n                            editState.isEmpty.map((i, index)=>{\r\n                                if(i===true){\r\n                                    return  (editState.isXed[index]===false) ? <SvgCircle key={index} cx={\"4%\"} cy={Math.floor((index%6))*14+15+\"%\"} r={\"20px\"} stroke=\"black\" strokeWidth=\"2\" fill={\"none\"}></SvgCircle> : (\r\n                                        <>\r\n                                            <Line x1={\"2%\"} y1 ={Math.floor(index%6) * 14 + 10.5+\"%\"} x2={\"6%\"} y2={Math.floor(index%6) * 14 + 19.5+\"%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                                            <Line x1={\"2%\"} y1={Math.floor(index%6) * 14 + 19.5+\"%\"} x2={\"6%\"} y2={Math.floor(index%6) * 14 + 10.5+\"%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                                        </>\r\n                                    )\r\n                                }return null\r\n\r\n                            })\r\n                        }\r\n\r\n\r\n                        {\r\n                            editState.num===1 ? <Line x1={\"10%\"} y1={\"14.5%\"} x2={\"10%\"} y2={\"85.5%\"} stroke={\"black\"} strokeWidth={\"15\"}></Line> : <Line x1={\"10%\"} y1={\"14.5%\"} x2={\"10%\"} y2={\"85.5%\"} stroke={\"black\"} strokeWidth={\"6\"}></Line>\r\n                        }\r\n\r\n                        <Line x1={\"32.5%\"} y1 ={\"15%\"} x2={\"32.5%\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"56%\"} y1={\"15%\"} x2={\"56%\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"78.5%\"} y1={\"15%\"} x2={\"78.5%\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n\r\n\r\n                        <Line x1={\"10%\"} y1={\"15%\"} x2={\"100%\"} y2={\"15%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"10%\"} y1={\"29%\"} x2={\"100%\"} y2={\"29%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"10%\"} y1={\"43%\"} x2={\"100%\"} y2={\"43%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"10%\"} y1={\"57%\"} x2={\"100%\"} y2={\"57%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"10%\"} y1={\"71%\"} x2={\"100%\"} y2={\"71%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"10%\"} y1={\"85%\"} x2={\"100%\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        {\r\n                            editState.circleState.map((i, index)=>{\r\n                                if(i===true){\r\n                                    return  <SvgCircle key={index} cx={(index%4)*22.5+12.5+10+\"%\"} cy={Math.floor((index/4))*14+15+\"%\"} r={\"20px\"} color={\"black\"}></SvgCircle>\r\n                                }return null\r\n                            })\r\n                        }\r\n                        {\r\n                            Object.keys(editState.longCoord).map((i,index)=>{\r\n                                return <Rect key={index} x={(i%4)*22.5+12.5+10+\"%\"} y={Math.floor((i/4))*14+15-7+\"%\"} width={\"40px\"} height={14*editState.longCoord[i]+\"%\"}rx={\"5%\"} ry={\"5%\"} color={\"black\"}></Rect>\r\n                            })\r\n                        }\r\n                        <Text x={\"21.25%\"} y={\"100%\"} fontSize={\"2rem\"}>{editState.num}</Text>\r\n                        <Text x={\"43.75%\"} y={\"100%\"} fontSize={\"2rem\"}>{editState.num+1}</Text>\r\n                        <Text x={\"66.25%\"} y={\"100%\"} fontSize={\"2rem\"}>{editState.num+2}</Text>\r\n                        <Text x={\"88.75%\"} y={\"100%\"} fontSize={\"2rem\"}>{editState.num+3}</Text>\r\n                        <Text x={\"10%\"} y={\"7%\"} fontSize={\"2rem\"} fontWeight={\"bold\"}>{editState.code}</Text>\r\n\r\n\r\n                    </Result>\r\n                </ResultWrapper>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content","import React from \"react\"\nimport Content from \"./Content/\"\n\nfunction App() {\n  return (\n    <>\n      <Content></Content>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}