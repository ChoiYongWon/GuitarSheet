{"version":3,"sources":["Content/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","styled","div","Logo","span","Container","EditorWrapper","Editor","props","num","TitleArea","Cell","EditorTouchArea","EditorNumArea","EditorButtonArea","TouchCell","Circle","view","UpCircle","DownCircle","Rectangle","ResultWrapper","Result","svg","attrs","version","xmlns","Rect","rect","x","Line","line","SvgCircle","circle","Text","text","Content","svgRef","createRef","useState","circleState","Array","fill","longState","longCoord","dragStartIndex","code","editState","setEditState","useEffect","placeholder","onChange","e","state","target","value","map","i","index","onDragStart","onDragEnter","Math","abs","floor","onDragEnd","n","onClick","longIndex","Object","keys","Number","j","length","deleteLong","size","min","max","defaultValue","disabled","icon","DownloadOutlined","saveSvgAsPng","current","ref","x1","y1","x2","y2","stroke","strokeWidth","cx","cy","r","color","y","width","height","rx","ry","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fae837ac.chunk.js","sourcesContent":["import React,{useState, useEffect, createRef} from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { InputNumber, Button, Input} from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport {saveSvgAsPng} from \"save-svg-as-png\"\r\n\r\nconst Header = styled.div`\r\n  width : 100%;\r\n  height : 6rem;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow : 4px 4px 2px grey;\r\n`\r\n\r\nconst Logo = styled.span`\r\n  font-weight: bold;\r\n  font-size : 2.5rem;\r\n  color : black;\r\n`\r\n\r\nconst Container = styled.div`\r\n  width : 50%;\r\n  display : flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin : 0 auto;\r\n  margin-top: 2rem;\r\n  @media(max-width: 1500px){ width : 65%; }\r\n  @media(max-width: 1300px){ width : 80%; }\r\n  @media(max-width: 768px){ width : 95%; }\r\n  \r\n`\r\n\r\nconst EditorWrapper = styled.div`\r\n  width : 100%;\r\n  height : auto;\r\n  padding : 2rem;\r\n  border : 3px solid black;\r\n  border-radius : 10px;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Editor = styled.div`\r\n  width : 80%;\r\n  height : auto;\r\n  display : grid;\r\n  position: relative;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(5, 40px);\r\n  background-color: black;\r\n  border : 4px solid black;\r\n  border-right : none;\r\n  gap : 4px;\r\n  ${props=>props.num===1 ? `border-left : 14px solid black;` : null}\r\n  \r\n`\r\n\r\nconst TitleArea = styled.div`\r\n  width : 40%;\r\n  margin-bottom: 2rem;\r\n  display : flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Cell = styled.div`\r\n  background-color : white;\r\n\r\n`\r\n\r\nconst EditorTouchArea = styled.div`\r\n  width :100%;\r\n  display : grid;\r\n  position : absolute;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(6, 44px);\r\n  top : -23.5px;\r\n`\r\n\r\nconst EditorNumArea = styled.div`\r\n  width : 80%;\r\n  display : flex;\r\n  margin-top : 1.5rem;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst EditorButtonArea = styled.div`\r\n  width : 80%;\r\n  display : flex;\r\n  justify-content: center;\r\n  margin-top : 1rem;\r\n`\r\n\r\nconst TouchCell = styled.div`\r\n  background-color : transparent;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor : pointer;\r\n  &:hover {\r\n    background-color : rgba(0,0,0,0.3)\r\n  }\r\n`\r\n\r\nconst Circle = styled.div`\r\n  ${props=>props.view===true ? `display : block;` : `display : none;`}\r\n  height: 36px;\r\n  width: 36px;\r\n  border-radius: 22.125px;\r\n  background-color : black;\r\n`\r\n\r\nconst UpCircle = styled.div`\r\n  ${props=>props.view===true ? `display : block;` : `display : none;`}\r\n  height: 100%;\r\n  width: 36px;\r\n  border-top-left-radius: 22.125px;\r\n  border-top-right-radius: 22.125px;\r\n  background-color : black;\r\n`\r\n\r\nconst DownCircle = styled.div`\r\n  ${props=>props.view===true ? `display : block;` : `display : none;`}\r\n  height: 100%;\r\n  width: 36px;\r\n  border-bottom-left-radius: 22.125px;\r\n  border-bottom-right-radius: 22.125px;\r\n  background-color : black;\r\n`\r\n\r\nconst Rectangle = styled.div`\r\n  ${props=>props.view===true ? `display : block;` : `display : none;`}\r\n  height: 100%;\r\n  width: 36px;\r\n  background-color : black;\r\n`\r\n\r\n//result\r\nconst ResultWrapper = styled.div`\r\n  width : 100%;\r\n  height : auto;\r\n  padding : 2rem;\r\n  \r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst Result = styled.svg.attrs({ version: '1.1' , xmlns:\"http://www.w3.org/2000/svg\"})`\r\n  width : 82%;\r\n  min-height : 330px;\r\n`\r\n\r\nconst Rect = styled.rect`\r\n  x : calc(${props=>props.x} - 20px)\r\n`\r\n\r\nconst Line = styled.line`\r\n  \r\n`\r\n\r\nconst SvgCircle = styled.circle`\r\n\r\n`\r\n\r\nconst Text = styled.text`\r\n\r\n`\r\n\r\n// const TSpan = styled.tspan``\r\n\r\nconst Content = () => {\r\n\r\n    const svgRef = createRef()\r\n\r\n    const [editState, setEditState] = useState({\r\n        circleState : new Array(24).fill(false),\r\n        longState : new Array(24).fill(0), //0 : 아무것도 없는상태 1 : UP 2: DOWN 3 : 직사각형\r\n        longCoord : {},\r\n        dragStartIndex : null,\r\n        code : \"\",\r\n        num : 1,\r\n    })\r\n\r\n    const onNumChange = (e) => {\r\n        setEditState((state)=>{\r\n            return {\r\n                ...state,\r\n                circleState : [...state.circleState],\r\n                longState : [...state.longState],\r\n                longCoord : {...state.longCoord},\r\n                num : e,\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const onDownloadClick = (e)=>{\r\n        saveSvgAsPng(svgRef.current, \"GuitarSheet.png\")\r\n    }\r\n    const onTitleChange = (e) => {\r\n        setEditState((state)=>{\r\n            return {\r\n                ...state,\r\n                circleState : [...state.circleState],\r\n                longState : [...state.longState],\r\n                longCoord : {...state.longCoord},\r\n                code : e.target.value\r\n            }\r\n        })\r\n    }\r\n    const onDragStart = (e, index) => { //드래그 시작지점만 알면됨\r\n        setEditState(state=>{\r\n            const circleState = [...state.circleState]\r\n            const longState = [...state.longState]\r\n            if(circleState[index]===true){\r\n                circleState[index] = false\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                circleState : [...circleState],\r\n                longState : [...longState],\r\n                longCoord : {...state.longCoord},\r\n                dragStartIndex : index\r\n            }\r\n        })\r\n    }\r\n\r\n    const onDragEnd = (e, index) => {\r\n        setEditState(state=>{\r\n            const circleState = [...state.circleState]\r\n            const longState = [...state.longState]\r\n            const longCoord = {...state.longCoord}\r\n\r\n            let n = 0\r\n            if(longState[index]===1){\r\n                while(true){\r\n                    n += 1\r\n                    if(longState[index+4*n]===2){\r\n                        break\r\n                    }\r\n                }\r\n                longCoord[index] = n + 1\r\n            }else if(longState[index]===2){\r\n                while(true){\r\n                    n += 1\r\n                    if(longState[index-4*n]===1){\r\n                        break\r\n                    }\r\n                }\r\n                longCoord[index-4*n] = n + 1\r\n            }else{\r\n\r\n            }\r\n\r\n\r\n            return {\r\n                ...state,\r\n                circleState : [...circleState],\r\n                longState : [...longState],\r\n                longCoord : {...longCoord},\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const onDragEnter = (e, index) => { //드래그하는 곳에따라 원 모양 배치\r\n        setEditState(state=>{\r\n            const circleState = [...state.circleState]\r\n            const longState = [...state.longState]\r\n\r\n            if(circleState[index]===true){\r\n                circleState[index] = false\r\n            }\r\n\r\n            if(state.dragStartIndex%4===index%4) { //같은 줄 인식\r\n                if (state.dragStartIndex > index) {//밑으로\r\n                    if (longState[state.dragStartIndex + 4] === 2) {\r\n                        longState[state.dragStartIndex + 4] = 0\r\n                    }\r\n                    if (longState[index] === 3) {\r\n                        longState[index - 4] = 0\r\n                        longState[index] = 1\r\n                    } else {\r\n                        longState[state.dragStartIndex] = 2\r\n                        longState[index] = 1\r\n                    }\r\n\r\n                } else if (state.dragStartIndex < index) {//위로\r\n                    if (longState[state.dragStartIndex - 4] === 1) {\r\n                        longState[state.dragStartIndex - 4] = 0\r\n                    }\r\n                    if (longState[index] === 3) {\r\n                        longState[index + 4] = 0\r\n                        longState[index] = 2\r\n\r\n                    } else {\r\n                        longState[state.dragStartIndex] = 1\r\n                        longState[index] = 2\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                for (let i = 1; i < Math.abs(Math.floor(index / 4) - Math.floor(state.dragStartIndex / 4)); i++) {\r\n                    if (index > state.dragStartIndex) {\r\n                        longState[state.dragStartIndex + 4 * i] = 3\r\n                    } else {\r\n                        longState[state.dragStartIndex - 4 * i] = 3\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                circleState : [...circleState],\r\n                longState : [...longState],\r\n                longCoord : {...state.longCoord},\r\n            }\r\n        })\r\n    }\r\n    const deleteLong = (index) => {\r\n        for(let i=0;i<Object.keys(editState.longCoord).length;i++){\r\n            const longIndex = Object.keys(editState.longCoord)[i] // Key값\r\n            if(index >= Number(longIndex) && index <=Number(longIndex) + (editState.longCoord[longIndex]-1)*4 && index%4 === Number(longIndex)%4){//존재\r\n                setEditState(state=>{\r\n                    const longState = [...state.longState]\r\n                    const longCoord = {...state.longCoord}\r\n\r\n                    for(let j=0;j<longCoord[longIndex];j++){\r\n                        longState[Number(longIndex)+4*j] = 0\r\n                    }\r\n                    delete longCoord[longIndex] //value\r\n                    return {\r\n                        ...state,\r\n                        circleState : [...state.circleState],\r\n                        longState : [...longState],\r\n                        longCoord : {...longCoord},\r\n                    }\r\n                    }\r\n                )\r\n                break\r\n            }\r\n        }\r\n    }\r\n    //잠시 보류\r\n    // const filterCode = (code) => {\r\n    //     let answer = \"\"\r\n    //     let index=0\r\n    //     let upOn = false\r\n    //     let upContent = \"\"\r\n    //     let result = code.replace(/{/gi,\"<TSpan dy=-10 fontSize='1rem'>\")\r\n    //     result = result.replace(/\\[/gi,\"<TSpan dy=+10 fontSize='1rem'>\")\r\n    //     result = result.replace(/\\}/gi,\"</TSpan>\")\r\n    //     result = result.replace(/\\]/gi,\"</TSpan>\")\r\n    //     for(let i=0;i<result.length;i++){\r\n    //         if(result.charAt(i)==='['){\r\n    //             index = i\r\n    //             upOn = true\r\n    //         }else if(result.charAt(i)===']'){\r\n    //             answer += result.substring(index, i+1)\r\n    //             answer += <TSpan dy={\"-10\"} fontSize={\"1rem\"}>content</TSpan>\r\n    //         }else if(upOn){\r\n    //             upContent += result.charAt(i)\r\n    //         }\r\n    //         else{\r\n    //             answer += result.charAt(i)\r\n    //         }\r\n    //     }\r\n    //     return <Text x={\"0%\"} y={\"7%\"} fontSize={\"2rem\"} fontWeight={\"bold\"}>{result}</Text>\r\n    // }\r\n\r\n    useEffect(()=>{\r\n    }, [editState])\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Logo>GuitarSheet</Logo>\r\n            </Header>\r\n            <Container>\r\n                <EditorWrapper>\r\n                    <TitleArea>\r\n                        <Input placeholder=\"Code\" onChange={onTitleChange}/>\r\n                    </TitleArea>\r\n                    <Editor num={editState.num}>\r\n                        {\r\n                            new Array(20).fill(0).map((i, index)=>{\r\n                                return <Cell key={index}></Cell>\r\n                            })\r\n                        }\r\n                        <EditorTouchArea>\r\n                            {\r\n                                new Array(24).fill(0).map((i, index)=>{\r\n                                    return <TouchCell key={index} onDragStart={(e)=>onDragStart(e, index)} onDragEnter={(e)=>onDragEnter(e, index)} onDragEnd={(e)=>onDragEnd(e, index)}onClick={(e)=>{\r\n                                        setEditState((state)=>{\r\n                                            const circleState = [...state.circleState]\r\n                                            circleState[index] = (circleState[index]) ? false : true\r\n                                            deleteLong(index)\r\n                                            return {\r\n                                                ...state,\r\n                                                circleState : circleState,\r\n                                                longState : [...state.longState],\r\n                                                longCoord : {...state.longCoord},\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    >\r\n                                        <Circle key={index} view={editState.circleState[index]}></Circle>\r\n                                        <UpCircle key={24+index} view={editState.longState[index]===1}></UpCircle>\r\n                                        <DownCircle key={48+index} view={editState.longState[index]===2}></DownCircle>\r\n                                        <Rectangle key={72+index} view={editState.longState[index]===3}></Rectangle>\r\n\r\n                                    </TouchCell>\r\n                                })\r\n                            }\r\n                        </EditorTouchArea>\r\n\r\n                    </Editor>\r\n                    <EditorNumArea>\r\n                        <InputNumber size=\"large\" min={1} max={17} defaultValue={1} onChange={onNumChange} />\r\n                        <InputNumber size=\"large\" min={1} max={17} value={editState?.num+1} disabled={true}/>\r\n                        <InputNumber size=\"large\" min={1} max={17} value={editState?.num+2} disabled={true}/>\r\n                        <InputNumber size=\"large\" min={1} max={17} value={editState?.num+3} disabled={true}/>\r\n                    </EditorNumArea>\r\n                    <EditorButtonArea>\r\n                        <Button icon={<DownloadOutlined />} size={\"large\"} onClick={onDownloadClick}>\r\n                            Download\r\n                        </Button>\r\n                    </EditorButtonArea>\r\n                </EditorWrapper>\r\n                <ResultWrapper>\r\n                    <Result ref={svgRef}>\r\n                        {\r\n                            editState.num===1 ? <Line x1={\"0\"} y1={\"15%\"} x2={\"0\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"25\"}></Line> : <Line x1={\"0\"} y1={\"15%\"} x2={\"0\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"6\"}></Line>\r\n                        }\r\n\r\n                        <Line x1={\"25%\"} y1={\"15%\"} x2={\"25%\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"50%\"} y1={\"15%\"} x2={\"50%\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"75%\"} y1={\"15%\"} x2={\"75%\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n\r\n\r\n                        <Line x1={\"0\"} y1={\"15%\"} x2={\"100%\"} y2={\"15%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"0\"} y1={\"29%\"} x2={\"100%\"} y2={\"29%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"0\"} y1={\"43%\"} x2={\"100%\"} y2={\"43%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"0\"} y1={\"57%\"} x2={\"100%\"} y2={\"57%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"0\"} y1={\"71%\"} x2={\"100%\"} y2={\"71%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        <Line x1={\"0\"} y1={\"85%\"} x2={\"100%\"} y2={\"85%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                        {\r\n                            editState.circleState.map((i, index)=>{\r\n                                if(i===true){\r\n                                    return <SvgCircle key={index} cx={(index%4)*25+12.5+\"%\"} cy={Math.floor((index/4))*14+15+\"%\"} r={\"20px\"} color={\"black\"}></SvgCircle>\r\n                                }return null\r\n                            })\r\n                        }\r\n                        {\r\n                            Object.keys(editState.longCoord).map((i,index)=>{\r\n                                return <Rect key={index} x={(i%4)*25+12.5+\"%\"} y={Math.floor((i/4))*14+15-7+\"%\"} width={\"40px\"} height={14*editState.longCoord[i]+\"%\"}rx={\"5%\"} ry={\"5%\"} color={\"black\"}></Rect>\r\n                            })\r\n                        }\r\n                        <Text x={\"11%\"} y={\"100%\"} fontSize={\"2rem\"}>{editState.num}</Text>\r\n                        <Text x={\"36.5%\"} y={\"100%\"} fontSize={\"2rem\"}>{editState.num+1}</Text>\r\n                        <Text x={\"61.5%\"} y={\"100%\"} fontSize={\"2rem\"}>{editState.num+2}</Text>\r\n                        <Text x={\"86.5%\"} y={\"100%\"} fontSize={\"2rem\"}>{editState.num+3}</Text>\r\n                        {\r\n                            editState.code\r\n                        }\r\n                    </Result>\r\n                </ResultWrapper>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content","import React from \"react\"\nimport Content from \"./Content/\"\n\nfunction App() {\n  return (\n    <>\n      <Content></Content>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}