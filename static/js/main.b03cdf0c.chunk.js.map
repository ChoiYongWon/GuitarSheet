{"version":3,"sources":["Content/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["EditorWrapper","styled","div","Editor","props","num","TitleArea","Cell","EditorTouchArea","EditorNumArea","EditorButtonArea","TouchCell","Circle","view","UpCircle","DownCircle","Rectangle","ResultWrapper","Result","svg","attrs","version","xmlns","Rect","rect","Line","line","SvgCircle","circle","Text","text","Content","svgRef","createRef","useState","circleState","Array","fill","longState","longCoord","dragStartIndex","code","editState","setEditState","useEffect","console","log","placeholder","onChange","e","target","value","state","map","i","index","onDragStart","onDragEnter","Math","abs","floor","onDragEnd","n","onClick","longIndex","Object","keys","Number","j","length","deleteLong","size","min","max","defaultValue","disabled","icon","DownloadOutlined","saveSvgAsPng","current","ref","x1","y1","x2","y2","stroke","strokeWidth","cx","cy","r","color","x","y","width","height","rx","ry","fontSize","fontWeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b03cdf0c.chunk.js","sourcesContent":["import React,{useState, useEffect, createRef, useCallback} from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { InputNumber, Button, Input} from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport {saveSvgAsPng} from \"save-svg-as-png\"\r\n\r\nconst EditorWrapper = styled.div`\r\n  width : 40%;\r\n  height : auto;\r\n  padding : 2rem;\r\n  border : 3px solid black;\r\n  border-radius : 10px;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Editor = styled.div`\r\n  width : 80%;\r\n  height : auto;\r\n  display : grid;\r\n  position: relative;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(5, 40px);\r\n  background-color: black;\r\n  border : 4px solid black;\r\n  border-right : none;\r\n  gap : 4px;\r\n  ${props=>props.num===1 ? `border-left : 14px solid black;` : null}\r\n  \r\n`\r\n\r\nconst TitleArea = styled.div`\r\n  width : 40%;\r\n  margin-bottom: 2rem;\r\n  display : flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Cell = styled.div`\r\n  background-color : white;\r\n\r\n`\r\n\r\nconst EditorTouchArea = styled.div`\r\n  width :100%;\r\n  display : grid;\r\n  position : absolute;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(6, 40px);\r\n  gap : 4px;\r\n  top : -23.5px;\r\n`\r\n\r\nconst EditorNumArea = styled.div`\r\n  width : 80%;\r\n  display : flex;\r\n  margin-top : 1.5rem;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst EditorButtonArea = styled.div`\r\n  width : 80%;\r\n  display : flex;\r\n  justify-content: center;\r\n  margin-top : 1rem;\r\n`\r\n\r\nconst TouchCell = styled.div`\r\n  background-color : transparent;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &:hover {\r\n    background-color : rgba(0,0,0,0.3)\r\n  }\r\n`\r\n\r\nconst Circle = styled.div`\r\n  ${props=>props.view==true ? `display : block;` : `display : none;`}\r\n  height: 2.5rem;\r\n  width: 2.5rem;\r\n  border-radius: 22.125px;\r\n  background-color : black;\r\n`\r\n\r\nconst UpCircle = styled.div`\r\n  ${props=>props.view==true ? `display : block;` : `display : none;`}\r\n  height: 3rem;\r\n  width: 2.5rem;\r\n  border-top-left-radius: 22.125px;\r\n  border-top-right-radius: 22.125px;\r\n  background-color : black;\r\n`\r\n\r\nconst DownCircle = styled.div`\r\n  ${props=>props.view==true ? `display : block;` : `display : none;`}\r\n  height: 3rem;\r\n  width: 2.5rem;\r\n  border-bottom-left-radius: 22.125px;\r\n  border-bottom-right-radius: 22.125px;\r\n  background-color : black;\r\n`\r\n\r\nconst Rectangle = styled.div`\r\n  ${props=>props.view==true ? `display : block;` : `display : none;`}\r\n  height: 3rem;\r\n  width: 2.5rem;\r\n  background-color : black;\r\n`\r\n\r\n//result\r\nconst ResultWrapper = styled.div`\r\n  width : 40%;\r\n  height : auto;\r\n  padding : 2rem;\r\n  border : 3px solid black;\r\n  border-radius : 10px;\r\n  display : flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst Result = styled.svg.attrs({ version: '1.1' , xmlns:\"http://www.w3.org/2000/svg\"})`\r\n  width : 82%;\r\n  min-height : 330px;\r\n`\r\n\r\nconst Rect = styled.rect`\r\n\r\n`\r\n\r\nconst Line = styled.line`\r\n  \r\n`\r\n\r\nconst SvgCircle = styled.circle`\r\n\r\n`\r\n\r\nconst Text = styled.text`\r\n\r\n`\r\n\r\nconst Content = () => {\r\n\r\n    const svgRef = createRef()\r\n\r\n    const [editState, setEditState] = useState({\r\n        circleState : new Array(24).fill(false),\r\n        longState : new Array(24).fill(0), //0 : 아무것도 없는상태 1 : UP 2: DOWN 3 : 직사각형\r\n        longCoord : {},\r\n        dragStartIndex : null,\r\n        code : \"\",\r\n        num : 1,\r\n    })\r\n\r\n    const onNumChange = (e) => {\r\n        console.log(e)\r\n        setEditState((state)=>{\r\n            return {\r\n                ...state,\r\n                circleState : [...state.circleState],\r\n                longState : [...state.longState],\r\n                longCoord : {...state.longCoord},\r\n                num : e,\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const onDownloadClick = (e)=>{\r\n        saveSvgAsPng(svgRef.current, \"GuitarSheet.png\")\r\n    }\r\n    const onTitleChange = (e) => {\r\n        console.log(e.target.value)\r\n        setEditState((state)=>{\r\n            return {\r\n                ...state,\r\n                circleState : [...state.circleState],\r\n                longState : [...state.longState],\r\n                longCoord : {...state.longCoord},\r\n                code : e.target.value\r\n            }\r\n        })\r\n    }\r\n    const onDragStart = (e, index) => { //드래그 시작지점만 알면됨\r\n        setEditState(state=>{\r\n            const circleState = [...state.circleState]\r\n            const longState = [...state.longState]\r\n            if(circleState[index]===true){\r\n                circleState[index] = false\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                circleState : [...circleState],\r\n                longState : [...longState],\r\n                longCoord : {...state.longCoord},\r\n                dragStartIndex : index\r\n            }\r\n        })\r\n    }\r\n\r\n    const onDragEnd = (e, index) => {\r\n        console.log(\"dragEnd : \", index)\r\n        setEditState(state=>{\r\n            const circleState = [...state.circleState]\r\n            const longState = [...state.longState]\r\n            const longCoord = {...state.longCoord}\r\n\r\n            let n = 0\r\n            if(longState[index]===1){\r\n                while(true){\r\n                    n += 1\r\n                    if(longState[index+4*n]===2){\r\n                        break\r\n                    }\r\n                }\r\n                longCoord[index] = n + 1\r\n            }else if(longState[index]===2){\r\n                while(true){\r\n                    n += 1\r\n                    if(longState[index-4*n]===1){\r\n                        break\r\n                    }\r\n                }\r\n                longCoord[index-4*n] = n + 1\r\n            }else{\r\n\r\n            }\r\n\r\n\r\n            return {\r\n                ...state,\r\n                circleState : [...circleState],\r\n                longState : [...longState],\r\n                longCoord : {...longCoord},\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const onDragEnter = (e, index) => { //드래그하는 곳에따라 원 모양 배치\r\n        setEditState(state=>{\r\n            const circleState = [...state.circleState]\r\n            const longState = [...state.longState]\r\n\r\n            if(circleState[index]===true){\r\n                circleState[index] = false\r\n            }\r\n\r\n            if(state.dragStartIndex%4===index%4) { //같은 줄 인식\r\n                if (state.dragStartIndex > index) {//밑으로\r\n                    if (longState[state.dragStartIndex + 4] == 2) {\r\n                        longState[state.dragStartIndex + 4] = 0\r\n                    }\r\n                    if (longState[index] == 3) {\r\n                        longState[index - 4] = 0\r\n                        longState[index] = 1\r\n                    } else {\r\n                        longState[state.dragStartIndex] = 2\r\n                        longState[index] = 1\r\n                    }\r\n\r\n                } else if (state.dragStartIndex < index) {//위로\r\n                    if (longState[state.dragStartIndex - 4] == 1) {\r\n                        longState[state.dragStartIndex - 4] = 0\r\n                    }\r\n                    if (longState[index] == 3) {\r\n                        longState[index + 4] = 0\r\n                        longState[index] = 2\r\n\r\n                    } else {\r\n                        longState[state.dragStartIndex] = 1\r\n                        longState[index] = 2\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                for (let i = 1; i < Math.abs(Math.floor(index / 4) - Math.floor(state.dragStartIndex / 4)); i++) {\r\n                    if (index > state.dragStartIndex) {\r\n                        longState[state.dragStartIndex + 4 * i] = 3\r\n                    } else {\r\n                        longState[state.dragStartIndex - 4 * i] = 3\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                circleState : [...circleState],\r\n                longState : [...longState],\r\n                longCoord : {...state.longCoord},\r\n            }\r\n        })\r\n    }\r\n    const deleteLong = (index) => {\r\n        for(let i=0;i<Object.keys(editState.longCoord).length;i++){\r\n            const longIndex = Object.keys(editState.longCoord)[i] // Key값\r\n            if(index >= Number(longIndex) && index <=Number(longIndex) + (editState.longCoord[longIndex]-1)*4 && index%4 == Number(longIndex)%4){//존재\r\n                console.log(index,longIndex, Number(longIndex) + editState.longCoord[longIndex]*4)\r\n                setEditState(state=>{\r\n                    const longState = [...state.longState]\r\n                    const longCoord = {...state.longCoord}\r\n\r\n                    for(let j=0;j<longCoord[longIndex];j++){\r\n                        console.log(\"지움 \",Number(longIndex)+4*j)\r\n                        longState[Number(longIndex)+4*j] = 0\r\n                    }\r\n                    delete longCoord[longIndex] //value\r\n                    return {\r\n                        ...state,\r\n                        circleState : [...state.circleState],\r\n                        longState : [...longState],\r\n                        longCoord : {...longCoord},\r\n                    }\r\n                    }\r\n                )\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(editState.longCoord)\r\n    }, [editState])\r\n\r\n    return (\r\n        <>\r\n            <EditorWrapper>\r\n                <TitleArea>\r\n                    <Input placeholder=\"Code\" onChange={onTitleChange}/>\r\n                </TitleArea>\r\n                <Editor num={editState.num}>\r\n                    {\r\n                        new Array(20).fill(0).map((i, index)=>{\r\n                            return <Cell key={index}></Cell>\r\n                        })\r\n                    }\r\n                    <EditorTouchArea>\r\n                        {\r\n                            new Array(24).fill(0).map((i, index)=>{\r\n                                return <TouchCell key={index} onDragStart={(e)=>onDragStart(e, index)} onDragEnter={(e)=>onDragEnter(e, index)} onDragEnd={(e)=>onDragEnd(e, index)}onClick={(e)=>{\r\n                                    setEditState((state)=>{\r\n                                        const circleState = [...state.circleState]\r\n                                        circleState[index] = (circleState[index]) ? false : true\r\n                                        deleteLong(index)\r\n                                        return {\r\n                                            ...state,\r\n                                            circleState : circleState,\r\n                                            longState : [...state.longState],\r\n                                            longCoord : {...state.longCoord},\r\n                                        }\r\n                                    })\r\n                                }\r\n                                }\r\n                                >\r\n                                    <Circle key={index} view={editState.circleState[index]}></Circle>\r\n                                    <UpCircle key={24+index} view={editState.longState[index]===1}></UpCircle>\r\n                                    <DownCircle key={48+index} view={editState.longState[index]===2}></DownCircle>\r\n                                    <Rectangle key={72+index} view={editState.longState[index]===3}></Rectangle>\r\n\r\n                                </TouchCell>\r\n                            })\r\n                        }\r\n                    </EditorTouchArea>\r\n\r\n                </Editor>\r\n                <EditorNumArea>\r\n                    <InputNumber size=\"large\" min={1} max={17} defaultValue={1} onChange={onNumChange} />\r\n                    <InputNumber size=\"large\" min={1} max={17} value={editState?.num+1} disabled={true}/>\r\n                    <InputNumber size=\"large\" min={1} max={17} value={editState?.num+2} disabled={true}/>\r\n                    <InputNumber size=\"large\" min={1} max={17} value={editState?.num+3} disabled={true}/>\r\n                </EditorNumArea>\r\n                <EditorButtonArea>\r\n                    <Button icon={<DownloadOutlined />} size={\"large\"} onClick={onDownloadClick}>\r\n                        Download\r\n                    </Button>\r\n                </EditorButtonArea>\r\n            </EditorWrapper>\r\n            <ResultWrapper>\r\n                <Result ref={svgRef}>\r\n                    {\r\n                        editState.num===1 ? <Line x1={\"0\"} y1={\"10%\"} x2={\"0\"} y2={\"80%\"} stroke={\"black\"} strokeWidth={\"25\"}></Line> : <Line x1={\"0\"} y1={\"10%\"} x2={\"0\"} y2={\"80%\"} stroke={\"black\"} strokeWidth={\"6\"}></Line>\r\n                    }\r\n\r\n                    <Line x1={\"25%\"} y1={\"10%\"} x2={\"25%\"} y2={\"80%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                    <Line x1={\"50%\"} y1={\"10%\"} x2={\"50%\"} y2={\"80%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                    <Line x1={\"75%\"} y1={\"10%\"} x2={\"75%\"} y2={\"80%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n\r\n\r\n                    <Line x1={\"0\"} y1={\"10%\"} x2={\"100%\"} y2={\"10%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                    <Line x1={\"0\"} y1={\"24%\"} x2={\"100%\"} y2={\"24%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                    <Line x1={\"0\"} y1={\"38%\"} x2={\"100%\"} y2={\"38%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                    <Line x1={\"0\"} y1={\"52%\"} x2={\"100%\"} y2={\"52%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                    <Line x1={\"0\"} y1={\"66%\"} x2={\"100%\"} y2={\"66%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                    <Line x1={\"0\"} y1={\"80%\"} x2={\"100%\"} y2={\"80%\"} stroke={\"black\"} strokeWidth={\"3\"}></Line>\r\n                    {\r\n                        editState.circleState.map((i, index)=>{\r\n                            if(i==true){\r\n                                return <SvgCircle key={index} cx={(index%4)*25+12.5+\"%\"} cy={Math.floor((index/4))*14+10+\"%\"} r={\"4%\"} color={\"black\"}></SvgCircle>\r\n                            }return null\r\n                        })\r\n                    }\r\n                    {\r\n                        Object.keys(editState.longCoord).map((i,index)=>{\r\n                            return <Rect key={index} x={(i%4)*25+12.5-3.5+\"%\"} y={Math.floor((i/4))*14+10-7+\"%\"} width={\"7%\"} height={14*editState.longCoord[i]+\"%\"}rx={\"7%\"} ry={\"7%\"} color={\"black\"}></Rect>\r\n                        })\r\n                    }\r\n                    <Text x={\"11%\"} y={\"97%\"} fontSize={\"2rem\"}>{editState.num}</Text>\r\n                    <Text x={\"36%\"} y={\"97%\"} fontSize={\"2rem\"}>{editState.num+1}</Text>\r\n                    <Text x={\"61%\"} y={\"97%\"} fontSize={\"2rem\"}>{editState.num+2}</Text>\r\n                    <Text x={\"86%\"} y={\"97%\"} fontSize={\"2rem\"}>{editState.num+3}</Text>\r\n                    //코드명\r\n                    <Text x={\"0%\"} y={\"6%\"} fontSize={\"1.5rem\"} fontWeight={\"bold\"}>{editState.code}</Text>\r\n                </Result>\r\n            </ResultWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content","import React from \"react\"\nimport Content from \"./Content/\"\n\nfunction App() {\n  return (\n    <>\n      <Content></Content>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}